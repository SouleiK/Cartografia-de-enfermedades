for (i in 1:1000) caca[i] <- rgamma(1)
x <- toc()
print(x$toc-x$tic)
save(benchy_winbugs,"./datos/Aragon.Rdata")
set.seed(1)
# Bayes
model <- function() {
for (i in 1:n) {
O[i] ~ dpois(mu[i])
log(mu[i]) <- log(E[i]) + m + het[i] + sp[i]
het[i] ~ dnorm(0, prechet)
R[i] <- exp(m + het[i] + sp[i])
}
for (i in 1:n) {
p.r[i] <- step(R[i] - 1)
}
sp[1:n] ~ car.normal(adj[], w[], num[], precsp)
m ~ dflat()
prechet <- pow(sdhet, -2)
precsp <- pow(sdsp, -2)
sdhet ~ dunif(0, 10)
sdsp ~ dunif(0, 10)
# dist predictiva
for (i in 1:n) {
y.pred[i] ~ dpois(mu[i])
res[i] <- y.pred[i] - O[i]
p.res[i] <- step(res[i])
p.y[i] <- step(y.pred[i])
}
}
datos <- list(
O = Aragon.df$O,
E = Aragon.df$E,
n = 729,
adj = vecinos$adj,
w = vecinos$weights,
num = vecinos$num
)
# Vecindad
aragon.nb <- poly2nb(aragon)
vecinos <- nb2WB(aragon.nb)
plot(aragon, col = Paleta[findInterval(vecinos$num, seq(from = 1, to = 29, by = 4))])
# Vecindad
aragon.nb <- poly2nb(aragon)
vecinos <- nb2WB(aragon.nb)
plot(aragon, col = paleta[findInterval(vecinos$num, seq(from = 1, to = 29, by = 4))])
load("./datos/Aragon.Rdata")
aragon <- readOGR("./datos", "aragon")
aragon <- aragon[order(aragon$CODMUNI), ]
aragon@data$RME <- Aragon.df$O / Aragon.df$E
aragon@data$O <- Aragon.df$O
head(aragon@data)[1:12]
paleta <- colorRampPalette(c("blue", "Yellow", "Orange", "Red"))(8)
par(mfrow = c(1, 2))
plot(aragon, col = paleta[findInterval(Aragon.df$O, c(0, 1, 5, 10, 20, 50, 100, 1073))])
title("Casos de Observados")
legend("bottomright",
c("0", "1", "5", "10", "20", "50", "100", "1000"),
fill = paleta,
pch = 1,
cex = .7)
plot(aragon, col = paleta[findInterval(Aragon.df$E, c(0, 1, 5, 10, 20, 50, 100, 1105))])
title("Casos de Esperados")
legend("bottomright",
c("0", "1", "5", "10", "20", "50", "100", "1000"),
fill = Paleta,
pch = 1,
cex = .7)
paleta <- colorRampPalette(c("blue", "Yellow", "Orange", "Red"))(8)
par(mfrow = c(1, 2))
plot(aragon, col = paleta[findInterval(Aragon.df$O, c(0, 1, 5, 10, 20, 50, 100, 1073))])
title("Casos de Observados")
legend("bottomright",
c("0", "1", "5", "10", "20", "50", "100", "1000"),
fill = paleta,
pch = 1,
cex = .7)
plot(aragon, col = paleta[findInterval(Aragon.df$E, c(0, 1, 5, 10, 20, 50, 100, 1105))])
title("Casos de Esperados")
legend("bottomright",
c("0", "1", "5", "10", "20", "50", "100", "1000"),
fill = paleta,
pch = 1,
cex = .7)
par(mfrow = c(1, 1))
plot(aragon, col = Paleta[findInterval(aragon@data$RME, c(0, 0.5, 1, 1.5, 2, 3, 5, 7))])
paleta <- colorRampPalette(c("blue", "Yellow", "Orange", "Red"))(8)
par(mfrow = c(1, 2))
plot(aragon, col = paleta[findInterval(Aragon.df$O, c(0, 1, 5, 10, 20, 50, 100, 1073))])
title("Casos de Observados")
legend("bottomright",
c("0", "1", "5", "10", "20", "50", "100", "1000"),
fill = paleta,
pch = 1,
cex = .7)
plot(aragon, col = paleta[findInterval(Aragon.df$E, c(0, 1, 5, 10, 20, 50, 100, 1105))])
title("Casos de Esperados")
legend("bottomright",
c("0", "1", "5", "10", "20", "50", "100", "1000"),
fill = paleta,
pch = 1,
cex = .7)
par(mfrow = c(1, 1))
plot(aragon, col = paleta[findInterval(aragon@data$RME, c(0, 0.5, 1, 1.5, 2, 3, 5, 7))])
title("Riesgo de mortalidad esperado")
legend("bottomright",
c("0", "0.5", "1", "1.5", "2", "3", "5", "7"),
fill = paleta,
pch = 1,
title = "Índice de Riesgo")
tabla1 <- aragon[order(aragon$O, decreasing = TRUE), ]
head(tabla1@data[, c("NOMBRE", "O")])
tabla2 <- aragon[order(aragon$RME, decreasing = TRUE), ]
head(tabla2@data[, c("NOMBRE", "RME")])
# Vecindad
aragon.nb <- poly2nb(aragon)
vecinos <- nb2WB(aragon.nb)
plot(aragon, col = paleta[findInterval(vecinos$num, seq(from = 1, to = 29, by = 4))])
title("Número de vecinos")
legend("bottomright", vecinos$num, seq(from = 1, to = 29, by = 4), fill = paleta, pch = 1, title = "Vecinos")
set.seed(1)
# Bayes
model <- function() {
for (i in 1:n) {
O[i] ~ dpois(mu[i])
log(mu[i]) <- log(E[i]) + m + het[i] + sp[i]
het[i] ~ dnorm(0, prechet)
R[i] <- exp(m + het[i] + sp[i])
}
for (i in 1:n) {
p.r[i] <- step(R[i] - 1)
}
sp[1:n] ~ car.normal(adj[], w[], num[], precsp)
m ~ dflat()
prechet <- pow(sdhet, -2)
precsp <- pow(sdsp, -2)
sdhet ~ dunif(0, 10)
sdsp ~ dunif(0, 10)
# dist predictiva
for (i in 1:n) {
y.pred[i] ~ dpois(mu[i])
res[i] <- y.pred[i] - O[i]
p.res[i] <- step(res[i])
p.y[i] <- step(y.pred[i])
}
}
datos <- list(
O = Aragon.df$O,
E = Aragon.df$E,
n = 729,
adj = vecinos$adj,
w = vecinos$weights,
num = vecinos$num
)
iniciales <- function() {
list(m = rnorm(1),
het = rnorm(729, 0, 0.1),
sp = rnorm(729, 0, 0.1),
sdhet = runif(1, 0, 1),
sdsp = runif(1, 0, 1),
y.pred = rpois(729, mean(Aragon.df$O)))
}
param <- c("R", "m", "het", "sp", "sdhet", "sdsp", "p.r", "p.res", "y.pred", "p.y")
tic("Modelo Winbugs")
mod <- bugs(
data = datos,
inits = iniciales,
parameters = param,
model = model,n.iter = ,
n.burnin = ,
n.thin = 3
, debug=TRUE
)
toc()
(mod$DIC)
set.seed(1)
# Bayes
model <- function() {
for (i in 1:n) {
O[i] ~ dpois(mu[i])
log(mu[i]) <- log(E[i]) + m + het[i] + sp[i]
het[i] ~ dnorm(0, prechet)
R[i] <- exp(m + het[i] + sp[i])
}
for (i in 1:n) {
p.r[i] <- step(R[i] - 1)
}
sp[1:n] ~ car.normal(adj[], w[], num[], precsp)
m ~ dflat()
prechet <- pow(sdhet, -2)
precsp <- pow(sdsp, -2)
sdhet ~ dunif(0, 10)
sdsp ~ dunif(0, 10)
# dist predictiva
for (i in 1:n) {
y.pred[i] ~ dpois(mu[i])
res[i] <- y.pred[i] - O[i]
p.res[i] <- step(res[i])
p.y[i] <- step(y.pred[i])
}
}
datos <- list(
O = Aragon.df$O,
E = Aragon.df$E,
n = 729,
adj = vecinos$adj,
w = vecinos$weights,
num = vecinos$num
)
iniciales <- function() {
list(m = rnorm(1),
het = rnorm(729, 0, 0.1),
sp = rnorm(729, 0, 0.1),
sdhet = runif(1, 0, 1),
sdsp = runif(1, 0, 1),
y.pred = rpois(729, mean(Aragon.df$O)))
}
param <- c("R", "m", "het", "sp", "sdhet", "sdsp", "p.r", "p.res", "y.pred", "p.y")
tic("Modelo Winbugs")
mod <- bugs(
data = datos,
inits = iniciales,
parameters = param,
model = model,
n.iter = 5000,
n.burnin = 1000,
n.thin = 3
#, debug=TRUE
)
toc()
(mod$DIC)
set.seed(1)
# Bayes
model <- function() {
for (i in 1:n) {
O[i] ~ dpois(mu[i])
log(mu[i]) <- log(E[i]) + m + het[i] + sp[i]
het[i] ~ dnorm(0, prechet)
R[i] <- exp(m + het[i] + sp[i])
}
for (i in 1:n) {
p.r[i] <- step(R[i] - 1)
}
sp[1:n] ~ car.normal(adj[], w[], num[], precsp)
m ~ dflat()
prechet <- pow(sdhet, -2)
precsp <- pow(sdsp, -2)
sdhet ~ dunif(0, 10)
sdsp ~ dunif(0, 10)
# dist predictiva
for (i in 1:n) {
y.pred[i] ~ dpois(mu[i])
res[i] <- y.pred[i] - O[i]
p.res[i] <- step(res[i])
p.y[i] <- step(y.pred[i])
}
}
datos <- list(
O = Aragon.df$O,
E = Aragon.df$E,
n = 729,
adj = vecinos$adj,
w = vecinos$weights,
num = vecinos$num
)
iniciales <- function() {
list(m = rnorm(1),
het = rnorm(729, 0, 0.1),
sp = rnorm(729, 0, 0.1),
sdhet = runif(1, 0, 1),
sdsp = runif(1, 0, 1),
y.pred = rpois(729, mean(Aragon.df$O)))
}
param <- c("R", "m", "het", "sp", "sdhet", "sdsp", "p.r", "p.res", "y.pred", "p.y")
tic("Modelo Winbugs")
mod <- bugs(
data = datos,
inits = iniciales,
parameters = param,
model = model,
n.iter = 2000,
n.burnin = 200,
n.thin = 3
#, debug=TRUE
)
toc()
(mod$DIC)
set.seed(1)
# Bayes
model <- function() {
for (i in 1:n) {
O[i] ~ dpois(mu[i])
log(mu[i]) <- log(E[i]) + m + het[i] + sp[i]
het[i] ~ dnorm(0, prechet)
R[i] <- exp(m + het[i] + sp[i])
}
for (i in 1:n) {
p.r[i] <- step(R[i] - 1)
}
sp[1:n] ~ car.normal(adj[], w[], num[], precsp)
m ~ dflat()
prechet <- pow(sdhet, -2)
precsp <- pow(sdsp, -2)
sdhet ~ dunif(0, 10)
sdsp ~ dunif(0, 10)
# dist predictiva
for (i in 1:n) {
y.pred[i] ~ dpois(mu[i])
res[i] <- y.pred[i] - O[i]
p.res[i] <- step(res[i])
p.y[i] <- step(y.pred[i])
}
}
datos <- list(
O = Aragon.df$O,
E = Aragon.df$E,
n = 729,
adj = vecinos$adj,
w = vecinos$weights,
num = vecinos$num
)
iniciales <- function() {
list(m = rnorm(1),
het = rnorm(729, 0, 0.1),
sp = rnorm(729, 0, 0.1),
sdhet = runif(1, 0, 1),
sdsp = runif(1, 0, 1),
y.pred = rpois(729, mean(Aragon.df$O)))
}
param <- c("R", "m", "het", "sp", "sdhet", "sdsp", "p.r", "p.res", "y.pred", "p.y")
tic("Modelo Winbugs")
mod <- bugs(
data = datos,
inits = iniciales,
parameters = param,
model = model,
n.iter = 2000,
n.burnin = 200,
n.thin = 3
, debug=TRUE
)
toc()
(mod$DIC)
remove(caca)
mod$mean
mod$mean$R
gc()
knitr::opts_chunk$set(
warning = FALSE,
message = FALSE,
comment = "",
fig.align = "center",
fig.show = "hold",
fig.height = 4,
fig.width = 8,
out.width = "70%"
)
library(rgdal)
library(spdep)
library(R2WinBUGS)
library(forestmangr)
library(tidyverse)
library(broom)
library(sp)
library(SpatialEpi)
library(maptools)
library(sf)
library(RColorBrewer)
library(classInt)
library(ggmap)
library(RgoogleMaps)
library(cshapes)
library(dplyr)
library(leaflet)
library(GGally)
library(INLA)
library(scales)
library(splancs)
library(lattice)
library(fields)
library(plotKML)
library(raster)
library(viridis)
library(gridExtra)
library(Rgraphviz)
library(graph)
library(styler)
library(tictoc)
load("./datos/Aragon.Rdata")
aragon <- readOGR("./datos", "aragon")
aragon <- aragon[order(aragon$CODMUNI), ]
Aragon.df$RME <- Aragon.df$O / Aragon.df$E
aragon@data$RME <- Aragon.df$O / Aragon.df$E
aragon@data$O <- Aragon.df$O
head(aragon@data)
veci <- poly2nb(aragon)
nb2INLA("datos/ar.graph", veci)
H <- inla.read.graph(filename = "datos/ar.graph")
image(inla.graph2matrix(H), xlab = "", ylab = "")
plot(H)
S <- U <- seq(1, 729)
Aragon.df <- cbind(Aragon.df, S, U)
formula <- O ~ 1 + f(S,
model = "besag",
graph = H,
scale.model = TRUE,
hyper =
list(prec = list(prior = "loggamma", param = c(1, 0.001)))
) +
f(U,
model = "iid",
hyper =
list(prec = list(prior = "loggamma", param = c(1, 0.001)))
)
tic("Modelo INLA")
model <- inla(formula,
family = "poisson",
data = Aragon.df,
E = E,
control.compute = list(dic = TRUE, waic = TRUE, cpo = TRUE),
control.predictor = list(compute = TRUE, cdf = c(log(1)))
)
toc()
summary(model)
aragon$SPmean <- round(model$summary.random$S[["mean"]], 4)
aragon$SPsd <- round(model$summary.random$S[["sd"]], 5)
grid.arrange(
spplot(aragon, c("SPmean"),
main = c("Posteriori de la componente espacial"),
colorkey = list(space = "bottom", space = "bottom"),
par.settings =
list(axis.line = list(
col = "transparent",
legend.ticks = "black"
))
),
spplot(aragon, c("SPsd"),
main = c("Sd de la componente espacial"),
colorkey = list(space = "bottom", space = "bottom"),
par.settings =
list(axis.line = list(
col = "transparent",
legend.ticks = "black"
))
),
ncol = 2
)
grid.arrange(
spplot(aragon, c("SPmean"),
main = c("Posteriori de la componente espacial"),
colorkey = list(space = "bottom", space = "bottom"),
par.settings =
list(axis.line = list(
col = "transparent",
legend.ticks = "black"
))
),
spplot(aragon, c("SPsd"),
main = c("Sd de la componente espacial"),
colorkey = list(space = "bottom", space = "bottom"),
par.settings =
list(axis.line = list(
col = "transparent",
legend.ticks = "black"
))
),
ncol = 2
)
aragon$RMEmean <- round(model$summary.fitted.values$mean, 4)
aragon$RMEsd <- round(model$summary.fitted.values$sd, 5)
grid.arrange(
spplot(aragon, c("SPmean"),
main = c("Posteriori de la componente espacial"),
colorkey = list(space = "bottom", space = "bottom"),
par.settings =
list(axis.line = list(
col = "transparent",
legend.ticks = "black"
))
),
spplot(aragon, c("SPsd"),
main = c("Sd de la componente espacial"),
colorkey = list(space = "bottom", space = "bottom"),
par.settings =
list(axis.line = list(
col = "transparent",
legend.ticks = "black"
))
),
ncol = 2
)
grid.arrange(
spplot(aragon, c("RMEmean"),
main = c("Posteriori de RME"),
colorkey = list(space = "bottom", space = "bottom"),
par.settings =
list(axis.line = list(
col = "transparent",
legend.ticks = "black"
))
),
spplot(aragon, c("RMEsd"),
main = c("Sd de la RME"),
colorkey = list(space = "bottom", space = "bottom"),
par.settings =
list(axis.line = list(
col = "transparent",
legend.ticks = "black"
))
),
ncol = 2
)
